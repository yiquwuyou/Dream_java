<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rabbiter.hospital.mapper.OrderMapper">
    <!--定义封装account和user的resultMap-->
    <!--    这段代码定义了一个名为 orderPatientMap 的结果映射（ResultMap），用于将查询结果映射到 com.rabbiter.hospital.pojo.Orders 类型的Java对象上。以下是各个属性的解释：-->

    <!--    id 属性：定义了主键属性，即 oId，对应于查询结果中的 o_id 列。-->
    <!--    <result> 元素：用于将查询结果的列映射到Java对象的属性上，这些属性在 com.rabbiter.hospital.pojo.Orders 类中有对应的字段。-->
    <!--    property 属性：指定了Java对象的属性名。-->
    <!--    column 属性：指定了数据库表的列名，该列名与 property 属性指定的属性相关联。-->
    <!--    接下来是一个 <association> 元素，它表示一对一的关系映射，将 patient 属性映射为 com.rabbiter.hospital.pojo.Patient 类型的Java对象。这个关系是基于 p_id 列建立的，也就是 Orders 表中的 p_id 列与 Patient 表中的 p_id 列相对应。-->

    <!--    在 <association> 元素内部，有两个 <result> 元素，分别用于将 Patient 对象的属性映射到Java对象的 patient 属性上。具体来说：-->

    <!--    第一个 <result> 元素将 pId 映射到 p_id 列，以便将患者的ID映射到 Orders 对象中的 patient 属性。-->
    <!--    第二个 <result> 元素将 pGender 映射到 p_gender 列，以便将患者的性别映射到 Orders 对象中的 patient 属性。-->
    <!--    这样，当查询执行后，结果集中的数据将按照上述映射关系，将订单的相关信息映射到 Orders 对象中，同时将患者信息映射到 patient 属性中的 Patient 对象中，从而实现了一对一的关系映射。-->
    <resultMap id="orderPatientMap" type="com.rabbiter.hospital.pojo.Orders">
        <id property="oId" column="o_id" />
        <result property="pId" column="p_id" />
        <result property="dId" column="d_id" />
        <result property="oStart" column="o_start" />
        <result property="oState" column="d_state" />
        <result property="countGender" column="countGender"/>
        <!--一对一的关系映射，配置封装user的内容 column中指名从表的外键 property="user"指的是单个实体类的引用-->
        <association property="patient" javaType="com.rabbiter.hospital.pojo.Patient">
            <result property="pId" column="p_id" />
            <result property="pGender" column="p_gender"/>
        </association>
    </resultMap>

    <!--传入多个参数-->
    <!--    1. 不需要parameterType参数-->
    <!--    2. mapper文件用注解@Param注解参数名-->
    <!--    3. xml文件要使用2中的参数名-->
    <!--    下过订单的人数-->
    <select id="orderPeople" resultType="Integer" parameterType="String">
        select count(p_id) as countGender from orders where o_start like #{o_start}"%"
    </select>

    <!--    指定id（患者）的订单数量-->
    <select id="orderPeopleByDid" resultType="Integer">
        select count(p_id) from orders where o_start like #{o_start}"%" and d_id=#{d_id}
    </select>

    <!--     统计各订单中各性别的数量-->
    <select id="orderGender" resultMap="orderPatientMap">
        select p_gender,count(p_gender) as countGender from patient p,orders o  where p.p_id=o.p_id GROUP BY p_gender
    </select>


    <!--    看上面的注释，类似-->
    <resultMap id="orderOidMap" type="com.rabbiter.hospital.pojo.Orders">
        <id property="oId" column="o_id" />
        <result property="pId" column="p_id" />
        <result property="dId" column="d_id" />
        <result property="oStart" column="o_start" />
        <result property="oEnd" column="o_end" />
        <result property="oRecord" column="o_record"/>
        <result property="oDrug" column="o_drug"/>
        <result property="oCheck" column="o_check"/>
        <result property="oTotalPrice" column="o_total_price"/>
        <result property="oAdvice" column="o_advice"/>

        <!--一对一的关系映射，配置封装user的内容 column中指名从表的外键 property="user"指的是单个实体类的引用-->
        <association property="patient" javaType="com.rabbiter.hospital.pojo.Patient">
            <result property="pId" column="p_id" />
            <result property="pName" column="p_name"/>
            <result property="pPhone" column="p_phone"/>
            <result property="pEmail" column="p_email"/>
            <result property="pGender" column="p_gender"/>
            <result property="pAge" column="p_age"/>
        </association>
    </resultMap>
    <!--    根据订单ID查询订单详情以及患者信息-->
    <select id="findOrderByOid" resultMap="orderOidMap">
        select * from orders o,patient p where o.p_id = p.p_id and o.o_id=#{o_id}
    </select>

    <!--    根据订单ID更新订单的检查、药品、总价和医嘱信息-->
    <update id="updateOrderByAdd" parameterType="com.rabbiter.hospital.pojo.Orders">
        update orders set o_check = concat(o_check,#{oCheck}),o_drug = concat(o_drug,#{oDrug}),o_total_price = #{oTotalPrice},o_advice = #{oAdvice} where o_id=#{oId}
    </update>


    <!--    看上面的注释-->
    <resultMap id="orderSectionMap" type="com.rabbiter.hospital.pojo.Orders">
        <id property="oId" column="o_id" />
        <result property="dId" column="d_id" />
        <result property="oStart" column="o_start" />
        <result property="countSection" column="countSection"/>
        <!--一对一的关系映射，配置封装user的内容 column中指名从表的外键 property="user"指的是单个实体类的引用-->
        <association property="doctor" javaType="com.rabbiter.hospital.pojo.Doctor">
            <result property="dId" column="d_id" />
            <result property="dSection" column="d_section"/>
        </association>
    </resultMap>

<!--    某一个时间段内各个医生科室的订单数量-->
    <select id="orderSection" resultMap="orderSectionMap">
        SELECT d.d_section,count(o.d_id) as countSection from orders o,doctor d where o.d_id=d.d_id
                                                                                  AND o_start BETWEEN #{startTime} and #{endTime}
        GROUP BY d.d_section
    </select>

    <resultMap id="orderPatientDoctorMap" type="com.rabbiter.hospital.pojo.Orders">
        <id property="oId" column="o_id" />
        <result property="pId" column="p_id" />
        <result property="dId" column="d_id" />
        <result property="oStart" column="o_start" />
        <result property="oEnd" column="o_end" />
        <result property="oTotalPrice" column="o_total_price" />
        <result property="oPriceState" column="o_price_state" />
        <result property="oState" column="o_state" />
        <result property="dName" column="dName" />
        <result property="pName" column="pName" />
        <!--一对一的关系映射，配置封装user的内容 column中指名从表的外键 property="user"指的是单个实体类的引用-->
        <association property="doctor" javaType="com.rabbiter.hospital.pojo.Doctor">
            <result property="dId" column="d_id" />
            <result property="dName" column="d_name" />
        </association>
        <association property="patient" javaType="com.rabbiter.hospital.pojo.Patient">
            <result property="pId" column="p_id" />
            <result property="pName" column="p_name" />
        </association>
    </resultMap>

<!--    查询未完成的订单信息（根据 医生ID、订单状态、订单开始时间查询）-->
    <select id="findOrderByNull" resultMap="orderPatientDoctorMap">
        SELECT o.o_id,d.d_name as dName,o.p_id,p.p_name as pName,o.o_start
        from orders o JOIN doctor d JOIN patient p
                                         on o.d_id=#{dId}
                                             and o.d_id=d.d_id
                                             and o.p_id=p.p_id
                                             and o.o_start like #{oStart}"%"
        and o.o_state=0
        ORDER BY o.o_start
    </select>

<!--    查询所有订单的详细信息（todo：不确定，后续此处注释大概率要改）-->
    <select id="findOrderByPid" resultMap="orderPatientDoctorMap">
        SELECT o.o_id,o.d_id,d.d_name as dName,o.p_id,p.p_name as pName,o.o_start,o.o_end,o.o_total_price,o.o_price_state,o.o_state
        from orders o JOIN doctor d JOIN patient p
                                         on o.p_id=#{pId}
                                             and o.d_id=d.d_id
                                             and o.p_id=p.p_id
        ORDER BY o.o_end DESC
    </select>



</mapper>
